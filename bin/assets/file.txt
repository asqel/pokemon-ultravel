Where there is a Swing ver

sion of an AWT component it will begin with J- and should be use


d exclusively, replacing the AWT version. For example, in Swing, onl
y use JButton, never Button class. As mentioned above, the 
AWT core classes, such as Color and Font, are still used as-is in Swing.


When drawing
 in Swing, use JPanel and override paintComponent(Graphics g) instead of using the AWT paint() methods.

Before Java 6 Update 12, mixin



g Swing components and basic AWT widgets ofte
n resulted in undesired side effects, with
 AWT widgets appearing on top of the Swing wi
 dgets regardless of their
  defined z-
  order. This problem was because the rendering architecture of the two widget toolkits was very different, despite Swing borrowing heavyweight top containers from AWT.[1]



Starting in Java 6 Update 12, it is possible to mix Swing and AWT widgets without having z-order problems.[2]